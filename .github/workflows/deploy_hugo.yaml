name: Build and Deploy

on:
  push:
    branches:
      - main
      - azure-static-web-apps

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

env:
  ARTIFACT_NAME: app

jobs:
  # Build job
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - name: Install Hugo
        run: sudo snap install hugo
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: setup-pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
      - name: Build Hugo site
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --gc --minify --baseURL "${{ steps.setup-pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./public

  # Deployment job
  deploy:
    name: Deploy app
    environment:
      name: main
    runs-on: ubuntu-latest
    needs: build
    env:
      APP_PATH: ${{ github.workspace }}/artifact
    steps:
      # Download artifact from build job
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.APP_PATH }}
      
      # Deploy to Azure Static Web Apps
      - uses: azure/static-web-apps-deploy@v1
        name: Deploy application
        with:
          action: upload
          azure_static_web_apps_api_token: ${{ secrets.SWA_DEPLOYMENT_TOKEN }}
          app_location: ${{ env.APP_PATH }}
          skip_app_build: true
          skip_api_build: true
