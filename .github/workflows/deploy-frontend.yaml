name: Build and deploy frontend

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/deploy-frontend.yaml
      - frontend/**

  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/deploy-frontend.yaml
      - frontend/**

env:
  ARTIFACT_NAME: app-build-${{ github.run_number }}

jobs:
  # Build job
  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
          fetch-depth: 0

      # Setup Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: latest
          extended: true

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'
        working-directory: ${{ github.workspace }}/frontend

      # Build Hugo application
      - name: Build Hugo application
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --gc --minify
        working-directory: ${{ github.workspace }}/frontend

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ github.workspace }}/frontend/public

  # Deployment job
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
    environment:
      name: main
    concurrency:
      group: main
      cancel-in-progress: false
    env:
      APP_PATH: ${{ github.workspace }}/artifact
    steps:
      # Download artifact from build job
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.APP_PATH }}

      # Deploy to Azure Static Web Apps
      - uses: azure/static-web-apps-deploy@v1
        name: Deploy application
        with:
          action: upload
          azure_static_web_apps_api_token: ${{ secrets.SWA_DEPLOYMENT_TOKEN }}
          app_location: ${{ env.APP_PATH }}
          skip_app_build: true
          skip_api_build: true
